<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<!-- Fonts -->
	<FontFamily x:Key="OpenSansRegular">./fonts/OpenSans-Regular.ttf#Open Sans</FontFamily>
	<FontFamily x:Key="OpenSansBold">./fonts/OpenSans-Bold.ttf#Open Sans</FontFamily>
	<FontFamily x:Key="OpenSansSemiBold">./fonts/OpenSans-SemiBold.ttf#Open Sans</FontFamily>
	<FontFamily x:Key="OpenSansExtraBold">./fonts/OpenSans-ExtraBold.ttf#Open Sans</FontFamily>

	<!-- Colors -->
	<SolidColorBrush x:Key="BackgroundStyle" Color="#262626"/>
	<SolidColorBrush x:Key="BackgroundStyleAlternativ" Color="#FF606060"/>

	<SolidColorBrush x:Key="ButtonMouseNotOver" Color="#FF505050"/>
	<SolidColorBrush x:Key="ButtonMouseOver" Color="#FF787878"/>

	<!-- Button -->
	<Style x:Key="ButtonDark" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="{StaticResource ButtonMouseNotOver}"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansRegular}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border CornerRadius="5" BorderBrush="White" BorderThickness="1" Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource ButtonMouseOver}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Title -->
	<Style x:Key="LabelTitleDark" TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="30"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansBold}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
	</Style>

	<!-- Label -->
	<Style x:Key="LabelStyleDark" TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansRegular}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
	</Style>

	<!-- TextBox -->
	<Style x:Key="TextBoxDark" TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="{StaticResource BackgroundStyleAlternativ}"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansRegular}"/>
	</Style>

	<!-- ListBox -->
	<Style x:Key="ListBoxDark" TargetType="{x:Type ListBox}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="{StaticResource BackgroundStyle}"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansRegular}"/>
	</Style>

	<!-- RadioButton -->
	<Style x:Key="RadioButtonDark" TargetType="{x:Type RadioButton}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansRegular}"/>
	</Style>

	<!-- ToggleButton -->
	<Style x:Key="ToggleButtonDark" TargetType="{x:Type ToggleButton}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="{StaticResource ButtonMouseNotOver}"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansRegular}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border CornerRadius="5" BorderBrush="White" BorderThickness="1" Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{StaticResource ButtonMouseOver}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Name="ListViewDark" TargetType="{x:Type ListView}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="{StaticResource BackgroundStyle}"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansRegular}"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<Style TargetType="{x:Type ListViewItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Grid Background="{TemplateBinding Background}">
						<Border Name="Selection" Visibility="Collapsed"/>
						<!-- This is used when GridView is put inside the ListView -->
						<GridViewRowPresenter Grid.RowSpan="2"
										  Margin="{TemplateBinding Padding}"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ListViewHeaderDark" TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="{StaticResource BackgroundStyleAlternativ}"/>
		<Setter Property="FontFamily" Value="{StaticResource OpenSansRegular}"/>
		<Setter Property="FontSize" Value="14"/>
	</Style>


	<!-- Border -->
	<Style x:Key="BorderDark" TargetType="{x:Type Border}">
		<Setter Property="BorderBrush" Value="{StaticResource BackgroundStyleAlternativ}"/>
		<Setter Property="Margin" Value="14"/>
		<Setter Property="BorderThickness" Value="2.0"/>
		<!--
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
					<LinearGradientBrush.GradientStops>
						<GradientStop Offset="0.0" Color="Gray"/>
						<GradientStop Offset="0.5" Color="White"/>
						<GradientStop Offset="1.0" Color="Black"/>
					</LinearGradientBrush.GradientStops>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		-->
		<!--
		<Setter Property="Effect">
			<Setter.Value>
				<DropShadowEffect Color="Black" Direction="270" ShadowDepth="0" BlurRadius="10" Opacity="0.5"/>
			</Setter.Value>
		</Setter>
		-->
	</Style>
</ResourceDictionary>
